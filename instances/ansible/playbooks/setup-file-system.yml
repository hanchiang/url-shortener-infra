- hosts: URL_shortener
  name: Configure file system, set data directory for postgres
  remote_user: "{{ USER }}"
  gather_facts: no
  vars_files:
    - ../vars.yml
  tasks:
    - name: Format file system
      args:
        executable: /bin/bash
      register: format_file_system
      shell: |
        # TODO: xvdf
        file_system=$(lsblk -f | grep xvdf | awk '{print $2}')
        
        # IMPORTANT!!! Format the disk only if it is not already formatted, otherwise existing data will be wiped out
        if [ -z "$file_system" ]
        then
          echo "Formatting disk {{ EBS_DEVICE_PATH }}"
          sudo mkfs -t ext4 {{ EBS_DEVICE_PATH }}
        else
          echo "{{ EBS_DEVICE_PATH }} is already formatted"
        fi
    - debug: var=format_file_system.stdout_lines
    - debug: var=format_file_system.stderr_lines
    - name: Mount file system
      args:
        executable: /bin/bash
      register: configure_file_system
      shell: |
        file_system=$(lsblk -f | grep xvdf | awk '{print $2}')
        sudo mkdir -p {{ FS_MOUNT_PATH }}
        sudo mount {{ EBS_DEVICE_PATH }} {{ FS_MOUNT_PATH }}

        # Automatically mount an attached volume after reboot
        uuid=$(sudo blkid {{ EBS_DEVICE_PATH }} -s UUID -o value)
        num_existing_line=$(sudo cat /etc/fstab | grep $uuid | wc -l)

        if [ "$num_existing_line" -eq 0 ]
        then
          sudo cp /etc/fstab /etc/fstab.orig
          echo "UUID=$uuid  {{ FS_MOUNT_PATH }}  $file_system  defaults,nofail  0  2" | sudo tee -a /etc/fstab > /dev/null

          # Verify
          sudo umount {{ FS_MOUNT_PATH }}
          sudo mount -a
        else
          echo "{{ FS_MOUNT_PATH }} is already added to /etc/fstab"
        fi

        sudo file -s {{ EBS_DEVICE_PATH }}
        sudo lsblk -f
        df -h
    - debug: var=configure_file_system.stdout_lines
    - debug: var=configure_file_system.stderr_lines