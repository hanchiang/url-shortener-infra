- hosts: URL_shortener
  name: Configure SSL for nginx using acme
  remote_user: "{{ USER }}"
  gather_facts: no
  vars_files:
    - ./vars.yml
  tasks:
    - name: Set variables
      set_fact:
        SSL_CERT_FILE_PATH: /etc/ssl/{{ DOMAIN }}/certificate.crt
        SSL_KEY_FILE_PATH: /etc/ssl/{{ DOMAIN }}/private.key
    - name: Install SSL cert
      args:
        executable: /bin/bash
      register: install_ssl
      become: yes
      become_method: su
      become_user: root
      become_exe: "sudo su -"
      async: 300
      poll: 10
      shell: |
        export DEBIAN_FRONTEND=noninteractive

        mkdir -p /etc/ssl/{{ DOMAIN }}

        apt-get -y install socat
        curl https://get.acme.sh | sh -s email={{ ADMIN_EMAIL }}
        
        ~/.acme.sh/acme.sh --issue -d {{ DOMAIN }} --nginx
        ~/.acme.sh/acme.sh --install-cert -d {{ DOMAIN }} --key-file {{ SSL_KEY_FILE_PATH }} \
        --fullchain-file {{ SSL_CERT_FILE_PATH }} --reloadcmd "sudo systemctl reload nginx"

        # Run cron to renew certs to verify result
        ~/.acme.sh/acme.sh --cron
    - debug: var=install_ssl.stdout_lines
    - debug: var=install_ssl.stderr_lines
    - name: Update nginx config
      register: update_nginx_config
      shell: |
        sudo mkdir -p {{ FS_MOUNT_PATH }}/nginx
        cat <<EOF | sudo tee /etc/nginx/sites-available/{{ DOMAIN }} > /dev/null
        upstream url_shortener_backend {
          server localhost:3000;
        }

        server {
          listen 80;
          listen [::]:80;

          server_name {{ DOMAIN }};

          return 301 \$host\$request_uri;
        }

        server {
          listen 443 ssl;

          ssl_certificate      {{ SSL_CERT_FILE_PATH }};
          ssl_certificate_key  {{ SSL_KEY_FILE_PATH }};

          server_name {{ DOMAIN }};
          access_log {{ FS_MOUNT_PATH }}/nginx/access.log;
          error_log {{ FS_MOUNT_PATH }}/nginx/error.log;

          location / {
            proxy_pass http://url_shortener_backend;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-Host \$host;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwared-Proto \$scheme;
          }
        }
        EOF

        sudo ln -sf /etc/nginx/sites-available/{{ DOMAIN }} /etc/nginx/sites-enabled/
        sudo nginx -t
        sudo systemctl reload nginx
    - debug: var=update_nginx_config.stdout_lines
    - debug: var=update_nginx_config.stderr_lines


