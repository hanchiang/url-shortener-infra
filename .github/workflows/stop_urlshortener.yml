name: Stop URL shortener
on:
  schedule:
    # Run a few times for each schedule, just in case there some transient errors occurs during the run
    - cron: '0,5,10 14 * * 1-5' # weekdays
    - cron: '0,5,10 4 * * 0,6' # weekends, 0 = sunday
    - cron: '0,5,10 15 * * *'  # weekends, 0 = sunday
jobs:
  stop_url_shortener:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      DOMAIN: ${{ secrets.DOMAIN }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    steps:
      - uses: actions/checkout@v3
      - name: Check if EC2 is already stopped
        run: |
          curl $DOMAIN
          if [ $? -ne 0 ]
          then
            # TODO: Hit the URL shortener health check endpoint instead
            echo "EC2 is already stopped"
            now=$(date +%Y-%m-%dT%H:%M:%S)
            payload=$(echo "{\"text\":\"EC2 is already stopped at <DATE>\"}" | sed "s~<DATE>~$now~")
            curl -X POST -H 'Content-type: application/json' --data "$payload" $SLACK_WEBHOOK
          fi
      - name: Create AWS config and credentials
        run: |
          pwd
          ls -la

          mkdir ~/.aws/
          cat << EOF > ~/.aws/config
          [default]
          region = $AWS_REGION
          output = json
          EOF
          chmod 600 ~/.aws/config

          cat << EOF > ~/.aws/credentials
          [default]
          aws_access_key_id = $AWS_ACCESS_KEY
          aws_secret_access_key = $AWS_SECRET_KEY
          EOF
          chmod 600 ~/.aws/credentials
      - name: Run stop script
        run: | 
          cd instances
          ./scripts/stop.sh $DOMAIN
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Successfully stopped EC2 at $(date +%Y-%m-%dT%H:%M:%S)"}' $SLACK_WEBHOOK
