name: Stop URL shortener
on:
  schedule:
    - cron: '55 15 * * 1-5' # weekdays
    - cron: '55 14 * * *'  # weekends, 0 = sunday
    
jobs:
  health_check:
    runs-on: ubuntu-latest
    env:
      URL_SHORTENER_HOST_NAME: ${{ secrets.URL_SHORTENER_HOST_NAME }}
    steps:
      - name: Check if EC2 is already stopped
        run: |
          curl $URL_SHORTENER_HOST_NAME
  notify_ec2_already_stopped:
    runs-on: ubuntu-latest
    needs: [health_check]
    if: ${{ failure() }}
    steps:
      - name: Send slack notification EC2 is already stopped
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          now=$(date +%Y-%m-%dT%H:%M:%S)
          payload=$(echo "{\"text\":\"URL shortener infra: EC2 is already stopped at <DATE>. Workflow: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}" | sed "s~<DATE>~$now~")
          curl -X POST -H 'Content-type: application/json' --data "$payload" $SLACK_WEBHOOK
          exit 0
  stop_ec2:
    runs-on: ubuntu-latest
    needs: [health_check]
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      DOMAIN: ${{ secrets.DOMAIN }}
    steps:
      - uses: actions/checkout@v3
      - name: Create AWS config and credentials
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
        run: |
          pwd
          ls -la

          mkdir ~/.aws/
          cat << EOF > ~/.aws/config
          [default]
          region = $AWS_REGION
          output = json
          EOF
          chmod 600 ~/.aws/config

          cat << EOF > ~/.aws/credentials
          [default]
          aws_access_key_id = $AWS_ACCESS_KEY
          aws_secret_access_key = $AWS_SECRET_KEY
          EOF
          chmod 600 ~/.aws/credentials
      - name: Run stop script
        run: | 
          cd instances
          ./scripts/stop.sh $DOMAIN
  notify_unsuccesful_run:
    runs-on: ubuntu-latest
    needs: [stop_ec2]
    if: ${{ needs.stop_ec2.result == 'failure' }}
    steps:
      - name: Send slack notification unsuccessful run
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          now=$(date +%Y-%m-%dT%H:%M:%S)
          payload=$(echo "{\"text\":\"URL shortener infra: Failed to stop EC2 at <DATE>. Workflow: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}" | sed "s~<DATE>~$now~")
          curl -X POST -H 'Content-type: application/json' --data "$payload" $SLACK_WEBHOOK
  notify_successful_run:
    runs-on: ubuntu-latest
    needs: [stop_ec2]
    if: ${{ needs.stop_ec2.result == 'success' }}
    steps:
      - name: Send slack notification successful run
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          now=$(date +%Y-%m-%dT%H:%M:%S)
          payload=$(echo "{\"text\":\"URL shortener infra: Successfully stopped EC2 at <DATE>. Workflow: $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\"}" | sed "s~<DATE>~$now~")
          curl -X POST -H 'Content-type: application/json' --data "$payload" $SLACK_WEBHOOK
