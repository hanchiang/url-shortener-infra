name: Start URL shortener
on:
  schedule:
    # Run a few times for each schedule, just in case there some transient errors occurs during the run
    - cron: '0,5,10 12 * * 1-5' # weekdays
    - cron: '0,5,10 2 * * 0,6' # weekends, 0 = sunday
    - cron: '0,5,10 6 * * 0,6' # weekends, 0 = sunday
jobs:
  start_url_shortener:
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      URL_SHORTENER_REDEPLOY_TOKEN: ${{ secrets.URL_SHORTENER_REDEPLOY_TOKEN }}
      DOMAIN: ${{ secrets.DOMAIN }}
      SSH_USER: ${{ secrets.SSH_USER }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    steps:
      - uses: actions/checkout@v3
      - name: Check if EC2 is already running
        run: |
          curl $DOMAIN
          if [ $? -eq 0 ]
          then
            # TODO: Hit the URL shortener health check endpoint instead
            echo "EC2 is already running"
            now=$(date +%Y-%m-%dT%H:%M:%S)
            payload=$(echo "{\"text\":\"EC2 is already running at <DATE>\"}" | sed "s~<DATE>~$now~")
            curl -X POST -H 'Content-type: application/json' --data "$payload" $SLACK_WEBHOOK
          fi
      - name: Set up ansible
        run: |
          pwd
          ls -la

          # Install ansible and required dependencies
          sudo apt-get update
          sudo apt-get -y install ansible
          pip3 install --no-input boto3

          # Ansible config
          cat << EOF | sudo tee /etc/ansible/ansible.cfg > /dev/null
          [inventory]
          enable_plugins = aws_ec2

          [defaults]
          host_key_checking = False
          EOF

          # TODO: system admin IAM
          # create aws-ec2.yml inventory
          cat << EOF > ./instances/ansible/aws_ec2.yml
          plugin: aws_ec2
          regions: us-east-1
          aws_access_key: $AWS_ACCESS_KEY
          aws_secret_key: $AWS_SECRET_KEY
          keyed_groups:
            - key: tags
              prefix: tag
            - key: tags.Name
              separator: ''
          EOF

          # Create variables
          cat << EOF > ./instances/ansible/vars.yml
          user: $SSH_USER
          domain: $DOMAIN
          admin_email: $ADMIN_EMAIL
          EOF
      - name: Create AWS config and credentials
        run: |
          mkdir ~/.aws/
          cat << EOF > ~/.aws/config
          [default]
          region = $AWS_REGION
          output = json
          EOF
          chmod 600 ~/.aws/config

          cat << EOF > ~/.aws/credentials
          [default]
          aws_access_key_id = $AWS_ACCESS_KEY
          aws_secret_access_key = $AWS_SECRET_KEY
          EOF
          chmod 600 ~/.aws/credentials
      - name: Create SSH private key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/url_shortener_rsa
          chmod 600 ~/.ssh/url_shortener_rsa
      - name: Run start script
        run: | 
          cd instances
          ./scripts/start.sh $DOMAIN $URL_SHORTENER_REDEPLOY_TOKEN $SSH_USER ~/.ssh/url_shortener_rsa
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Successfully started EC2 and deployed URL shortener at $(date +%Y-%m-%dT%H:%M:%S)"}' $SLACK_WEBHOOK
